name: Docs

on: [push]

jobs:
  build_docs:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.10.5
    permissions: write-all
    steps:
    #----------------------------------------------
    # check-out repo and set-up python and poetry
    #----------------------------------------------
    - name: Check out main
      uses: actions/checkout@main
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-0
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    #----------------------------------------------
    #             install dependencies
    #----------------------------------------------
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
    - name: Install library
      run: poetry install --no-interaction
    - name: Install pandoc
      run: sudo apt-get -y install pandoc
    #----------------------------------------------
    #                  build docs
    #----------------------------------------------
    - name: Test code snippets in documentation
      run: poetry run make doctest --directory docs/
    - name: Build documentation
      run: poetry run make html --directory docs/

  build_and_deploy_docs:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.10.5
    permissions: write-all
    steps:
    #----------------------------------------------
    # check-out repo and set-up python and poetry
    #----------------------------------------------
    - name: Check out main
      uses: actions/checkout@main
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-0
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    # -   name: Load cached venv
    #     id: cached-poetry-dependencies
    #     uses: actions/cache@v2
    #     with:
    #         path: .venv
    #         key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    #             install dependencies
    #----------------------------------------------
    - name: Install dependencies
      # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install library
      run: poetry install --no-interaction
    - name: Install pandoc
      run: sudo apt-get -y install pandoc
    #----------------------------------------------
    #                  build docs
    #----------------------------------------------
    - name: Test code snippets in documentation
      run: poetry run make doctest --directory docs/
    - name: Build documentation
      run: poetry run make html --directory docs/
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        touch docs/_build/html/.nojekyll
        echo 'biocypher.org' > docs/_build/html/CNAME
        git add -f docs/_build/
        git commit -m "Update autodoc" -a
    #----------------------------------------------
    #                  deploy docs
    #----------------------------------------------
    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: docs/_build/html
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
