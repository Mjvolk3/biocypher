name: Publish

on: [push]
# TODO: switch to this rules after successful test
#on:
#  push:
#    branches:
#      - main
#    tags:
#      - '*'

jobs:
  build_and_deploy_artifact:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.9
    environment:
      name: staging # uploads to test.pypi.org
      url: https://test.pypi.org/project/biocypher/
    permissions:
      id-token: write
      contents: write
    steps:
    #----------------------------------------------
    # check-out repo and set-up python and poetry
    #----------------------------------------------
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Setup Python and Poetry
      uses: ./.github/actions/setup
    #----------------------------------------------
    #            install dependencies
    #----------------------------------------------
    - name: Install dependencies
      uses: ./.github/actions/install
    #----------------------------------------------
    #       check if tag follows semver
    #----------------------------------------------
    - name: Validate tag name
      run: |
        if [[ ! "$GITHUB_REF" =~ ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$ ]]; then
          echo "Tag name is not in SemVer format (vX.Y.Z). Aborting."
          exit 1
        fi
    #----------------------------------------------
    #             build artifact
    #----------------------------------------------
    - name: Build artifact
      run: poetry build
    #----------------------------------------------
    #             upload to PyPi
    #----------------------------------------------
    - name: Publish artifact to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
    #----------------------------------------------
    #           create Github release
    #----------------------------------------------
    - name: Create Github release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: |
        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="$tag" \
            --generate-notes
